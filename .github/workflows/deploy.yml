name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:

  test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          cd backend/docker/local
          mkdir .envs
          cd .envs
          touch .server
          touch .postgres
          
          echo "USE_DOCKER=yes" >> .server
          echo "DJANGO_SECRET_KEY=" >> .server
          echo "DATABASE_URL=postgres://root:password@presentations_database:5151/presentations_tests" >> .server
          
          echo "POSTGRES_HOST=presentations_database" >> .postgres
          echo "POSTGRES_PORT=5151" >> .postgres
          echo "POSTGRES_DB=presentations_tests" >> .postgres
          echo "POSTGRES_USER=root" >> .postgres
          echo "POSTGRES_PASSWORD=password" >> .postgres

      - name: Run tests
        run: |
          docker compose -f ./backend/docker/docker-compose-local.yml build
          docker compose -f ./backend/docker/docker-compose-local.yml run --rm presentations_backend pytest

  build-and-deploy-backend:
    runs-on: ubuntu-latest
    needs: [test-backend]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Log in to Heroku container registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

    - name: Set Heroku stack to Docker
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku stack:set container -a prezi-presentations

    - name: Build Docker image
      run: |
        docker build -f ./backend/docker/production/django/Dockerfile -t registry.heroku.com/prezi-presentations/web .

    - name: Push to Heroku
      run: |
        docker push registry.heroku.com/prezi-presentations/web

    - name: Set environment variables
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
        DJANGO_ADMIN_URL: ${{ secrets.DJANGO_ADMIN_URL }}
      run: |
        heroku config:set DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY DATABASE_URL=$DATABASE_URL DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS DJANGO_ADMIN_URL=$DJANGO_ADMIN_URL -a prezi-presentations

    - name: Release the image
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku container:release web -a prezi-presentations

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build and Export
        run: npm run build && npm run export
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Deploy to Netlify
        run: |
          curl -s -o netlify-cli.zip https://github.com/netlify/cli/releases/latest/download/netlify-cli.zip
          unzip netlify-cli.zip
          sudo mv netlify /usr/local/bin
          npm install -g netlify-cli
          netlify deploy --prod --dir=out --site=131ca954-2d1c-4c3b-8373-0da751170e99
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
